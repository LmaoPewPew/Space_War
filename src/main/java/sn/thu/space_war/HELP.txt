public void repaint(Graphics g) {
        g.setColor(Color.cyan);
        g.fillRect(0, 0, WIDTH, HEIGHT);

        g.setColor(Color.orange);
        g.fillRect(0, HEIGHT - 120, WIDTH, 120);

        g.setColor(Color.green);
        g.fillRect(0, HEIGHT - 120, WIDTH, 20);

        g.setColor(Color.red);
        g.fillRect(bird.x, bird.y, bird.width, bird.height);

        for (Rectangle column : columns) {
            paintColumn(g, column);
        }

        if (obstacle != null) {
            paintObstacle(g, obstacle);
        }

        g.setColor(Color.white);
        g.setFont(new Font("Arial", 1, 100));

        if (!started) {
            g.drawString("Click to start!", 75, HEIGHT / 2 - 50);
        }

        if (gameOver) {
            clip.stop();
            soundPlaying = false;
            soundInit = true;

            if (score > Integer.parseInt(highscore)) {
                highscore = String.valueOf(score);
                try {
                    FileWriter writer = new FileWriter(highscorePath, false);
                    BufferedWriter bufferedWriter = new BufferedWriter(writer);
                    bufferedWriter.write(highscore);
                    bufferedWriter.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }

            g.drawString("Game Over!", 100, HEIGHT / 2 - 50);
            g.drawString("Highscore: " + highscore, 100, HEIGHT / 4 - 50);

        }

        if (!gameOver && started) {
            g.drawString(String.valueOf(score), WIDTH / 2 - 25, 100);
        }

        if (pausing) {
            if (!soundInit) {
                clip.stop();
                soundPlaying = false;
            }

            g.setColor(new Color(0, 0, 0, 127));
            g.fillRect(0, 0, WIDTH, HEIGHT);

            Graphics2D graphics2D = (Graphics2D) g;
            graphics2D.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);
            Font font = g.getFont().deriveFont(50.0f);
            //int widthText = g.getFontMetrics().stringWidth("PAUSED");

            g.setColor(new Color(255, 255, 255, 255));
            g.setFont(font);
            g.drawString("PAUSED", 300, HEIGHT / 2 - 310);

            g.setColor(new Color(0, 0, 0, 255));
            g.fillRect(248, 248, 304, 104);
            g.setColor(new Color(51, 51, 51, 255));
            g.fillRect(250, 250, 300, 100);


            graphics2D.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);
            font = g.getFont().deriveFont(50.0f);
            //widthText = g.getFontMetrics().stringWidth("EXIT GAM");

            g.setColor(new Color(255, 255, 255, 255));
            g.setFont(font);
            g.drawString("RESUME", 290, 320);


            g.setColor(new Color(0, 0, 0, 255));
            g.fillRect(248, 373, 304, 104);
            g.setColor(new Color(51, 51, 51, 255));
            g.fillRect(250, 375, 300, 100);


            graphics2D.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);
            font = g.getFont().deriveFont(50.0f);
            //widthText = g.getFontMetrics().stringWidth("EXIT GAM");

            g.setColor(new Color(255, 255, 255, 255));
            g.setFont(font);
            g.drawString("EXIT GAME", 262, 445);

            // Hardcore
            g.setColor(new Color(0, 0, 0, 255));
            g.fillRect(248, 498, 304, 104);
            if (hardcoreMode)
                g.setColor(new Color(200, 51, 51, 255));
            else
                g.setColor(new Color(51, 51, 51, 255));
            g.fillRect(250, 500, 300, 100);


            graphics2D.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);
            font = g.getFont().deriveFont(50.0f);
            //widthText = g.getFontMetrics().stringWidth("EXIT GAM");

            g.setColor(new Color(255, 255, 255, 255));
            g.setFont(font);
            g.drawString("HARDCORE", 257, 565);
        }
    }